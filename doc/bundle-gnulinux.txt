== Creating a Debian VM

Set up Debian VMs for building bundles. You need one for i386 and one
for amd64.

http://cdimage.debian.org/debian-cd/6.0.6/i386/iso-cd/debian-6.0.6-i386-netinst.iso
http://cdimage.debian.org/debian-cd/6.0.6/i386/iso-cd/SHA256SUMS
http://cdimage.debian.org/debian-cd/6.0.6/i386/iso-cd/SHA256SUMS.sign

http://cdimage.debian.org/debian-cd/6.0.6/amd64/iso-cd/debian-6.0.6-amd64-netinst.iso
http://cdimage.debian.org/debian-cd/6.0.6/amd64/iso-cd/SHA256SUMS
http://cdimage.debian.org/debian-cd/6.0.6/amd64/iso-cd/SHA256SUMS.sign

Verify the digests.
	http://www.debian.org/CD/verify
If you are using Debian, you can get the signing key by installing the
debian-keyring package (apt-get install debian-keyring). Add
	--keyring /usr/share/keyrings/debian-role-keys.gpg
to the gpg --verify command.

	$ gpg --verify SHA256SUMS.sign SHA256SUMS

	$ sha256sum debian-6.0.6-i386-netinst.iso
	2b4bcd9e782dfd6a5af9cac3e981be375652b2e5579402405eaf84ac4fe3754f  debian-6.0.6-i386-netinst.iso
	$ grep netinst SHA256SUMS
	2b4bcd9e782dfd6a5af9cac3e981be375652b2e5579402405eaf84ac4fe3754f  debian-6.0.6-i386-netinst.iso

	$ sha256sum debian-6.0.6-amd64-netinst.iso
	41d74134bf967b65d0b61a314ee07dfb539e03502ca69d9d3be8ab3b01da02d2  debian-6.0.6-amd64-netinst.iso
	$ grep netinst SHA256SUMS
	41d74134bf967b65d0b61a314ee07dfb539e03502ca69d9d3be8ab3b01da02d2  debian-6.0.6-amd64-netinst.iso

Create the disk images.

	$ qemu-img create -f qcow2 debian-6-i386-bundle.hda 10G
	$ qemu-img create -f qcow2 debian-6-amd64-bundle.hda 10G

Then boot the VM. You need your normal user to be in the "kvm" group for
this to work (sudo usermod -a -G kvm user).

	$ kvm -hda debian-6-i386-bundle.hda -cdrom debian-6.0.6-i386-netinst.iso
	$ kvm -hda debian-6-amd64-bundle.hda -cdrom debian-6.0.6-amd64-netinst.iso

Choose "Install" when it boots. Here are settings:

	English
	United States
	American English
	Hostname: debian
	Domain name:
	Root password:
	User full name: bundle
	User name: bundle
	User password: password
	Any time zone
	Guided - use entire disk
	All files in one partition
	Any mirror
	popularity-contest: no
	Software select: uncheck all but "Standard system utilities"
	GRUB on MBR: yes

Packages to install:

	$ sudo apt-get install --no-install-recommends git make python-m2crypto zip
	$ sudo apt-get install --no-install-recommends python-setuptools python-crypto python-twisted python-argparse

== Dependencies

=== pyptlib

	$ git clone https://git.torproject.org/pluggable-transports/pyptlib.git
	$ cd pyptlib
	$ sudo python setup.py install --single-version-externally-managed --root=/

== Browser bundle

Clone and build the flashproxy source.

	$ git clone https://git.torproject.org/flashproxy.git
	$ cd flashproxy
	$ make dist

Clone pyobfsproxy.

	$ git clone https://git.torproject.org/pluggable-transports/pyobfsproxy.git

Update your Debian.

	$ sudo apt-get update
	$ sudo apt-get upgrade

Enter the doc directory and edit the top of Makefile to set the version
numbers you want to use.
	BUNDLE_VERSION = ...
	BUNDLE_RELEASE = ...
	PT_BUNDLE_RELEASE = pt1
The latest Tor Browser Bundle version number can be found at
https://www.torproject.org/projects/torbrowser.html.en#Download-torbrowserbundlealpha.
PT_BUNDLE_RELEASE release should increment each time you build a new
bundle with the same BUNDLE_VERSION and BUNDLE_RELEASE, and be reset to
"pt1" when either of those change.

Run one of these two commands, depending on the platform:
	$ make gnulinux-i686
	$ make gnulinux-x86_64

Test running the bundle.
